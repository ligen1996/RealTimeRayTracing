white = Material('white')
white.baseColor = float4(1, 1, 1, 1.0)
white.roughness = 0.3

gndWidth = 40.

#ground
quadMesh = TriangleMesh.createQuad()
quadMeshID = sceneBuilder.addTriangleMesh(quadMesh, white)
quadNodeID = sceneBuilder.addNode('Quad', Transform(scaling=float3(gndWidth*2,1,160),translation=float3(0, -1, 0)))
sceneBuilder.addMeshInstance(quadNodeID, quadMeshID)

#blocker
cubeMesh = TriangleMesh.createCube(size=float3(0.7,2,0.7))
blockerCount = 10

cubeMeshIDs = []
cubeNodeIDs = []
cubeMidPos = []
cubeZ = 0
for num in range(0,blockerCount):
    cubeMeshIDs.append(sceneBuilder.addTriangleMesh(cubeMesh, white))
    xPos = -gndWidth/4+(gndWidth/2/(blockerCount+1))*(num+1)
    cubeMidPos.append(xPos)
    cubeNodeIDs.append(sceneBuilder.addNode('Cube'+str(num), Transform(translation=float3(xPos, 0, cubeZ))) )
    sceneBuilder.addMeshInstance(cubeNodeIDs[num], cubeMeshIDs[num])

# Add cameras
frontCamera = Camera("FrontCamera")
#frontCamera.position = float3(0,3,15)
#frontCamera.target = float3(0,2.8,14.25)
frontCamera.position = float3(0.2,5.714765,-2.240435)
frontCamera.target = float3(0.2,4.937005,-1.611875)
frontCamera.up = float3(0.000000,1.000000,0.000000)
sceneBuilder.addCamera(frontCamera)


#Add area Light
areaLight = RectLight('RectLight')
areaLight.intensity = float3(200)
sceneBuilder.addLight(areaLight)

LightMove = sceneBuilder.createAnimation(areaLight,'LightMoving',1.6)
#no move just for get light move matrix
#pos = float3(0,2,-8)
pos = float3(0,3,-9)
#dir = float3(0,0,1)
dir = float3(0,0.2,-1)

mv = float3(2,0,0)
tr = Transform(scaling=float3(0.5))
tr.lookAt(position=pos-mv,target=pos-mv+dir,up=float3(0,1,0))

tr2 = Transform(scaling=float3(0.5))
tr2.lookAt(position=pos+mv,target=pos+mv+dir,up=float3(0,1,0))

#tr.lookAt(position=float3(0,-1,0.1),target=float3(0,0,0),up=float3(0,1,0))
Animation.addKeyframe(LightMove, 0.0, tr)
Animation.addKeyframe(LightMove, 0.8, tr2)
Animation.addKeyframe(LightMove, 1.6, tr)
